# ===============================================
# ‡πÑ‡∏ü‡∏•‡πå‡∏ô‡∏µ‡πâ‡∏Ñ‡∏∑‡∏≠‡∏ï‡∏±‡∏ß‡∏ó‡∏µ‡πà‡∏à‡∏∞‡∏£‡∏±‡∏ô‡πÄ‡∏ó‡∏™‡πÉ‡∏´‡πâ‡πÄ‡∏£‡∏≤‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥
# ===============================================

# ‡∏ä‡∏∑‡πà‡∏≠‡∏ó‡∏µ‡πà‡∏à‡∏∞‡πÅ‡∏™‡∏î‡∏á‡πÉ‡∏ô GitHub
name: Web Test Auto Run

# ===============================================
# ‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡∏ß‡πà‡∏≤‡∏à‡∏∞‡∏£‡∏±‡∏ô‡πÄ‡∏°‡∏∑‡πà‡∏≠‡πÑ‡∏´‡∏£‡πà
# ===============================================
on:
  # ‡∏£‡∏±‡∏ô‡πÄ‡∏°‡∏∑‡πà‡∏≠ push code ‡πÑ‡∏õ‡∏ó‡∏µ‡πà branch main
  push:
    branches: [ main ]
  
  # ‡∏£‡∏±‡∏ô‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏Å‡∏î‡∏õ‡∏∏‡πà‡∏°‡∏£‡∏±‡∏ô‡πÄ‡∏≠‡∏á‡πÉ‡∏ô GitHub
  workflow_dispatch:

# ===============================================
# ‡∏á‡∏≤‡∏ô‡∏ó‡∏µ‡πà‡∏à‡∏∞‡∏ó‡∏≥
# ===============================================
jobs:
  # ‡∏ä‡∏∑‡πà‡∏≠‡∏á‡∏≤‡∏ô: test-web
  test-web:
    # ‡πÉ‡∏ä‡πâ‡∏Ñ‡∏≠‡∏°‡∏û‡∏¥‡∏ß‡πÄ‡∏ï‡∏≠‡∏£‡πå Ubuntu (Linux) ‡∏Ç‡∏≠‡∏á GitHub
    runs-on: ubuntu-latest
    
    # ‡∏Ç‡∏±‡πâ‡∏ô‡∏ï‡∏≠‡∏ô‡∏Å‡∏≤‡∏£‡∏ó‡∏≥‡∏á‡∏≤‡∏ô
    steps:
      # ‡∏Ç‡∏±‡πâ‡∏ô‡∏ï‡∏≠‡∏ô‡∏ó‡∏µ‡πà 1: ‡∏î‡∏∂‡∏á code ‡∏à‡∏≤‡∏Å GitHub
      - name: ‡∏î‡∏∂‡∏á code ‡∏°‡∏≤
        uses: actions/checkout@v4
      
      # ‡∏Ç‡∏±‡πâ‡∏ô‡∏ï‡∏≠‡∏ô‡∏ó‡∏µ‡πà 2: ‡∏ï‡∏¥‡∏î‡∏ï‡∏±‡πâ‡∏á Python
      - name: ‡∏ï‡∏¥‡∏î‡∏ï‡∏±‡πâ‡∏á Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12.4'
      
      # ‡∏Ç‡∏±‡πâ‡∏ô‡∏ï‡∏≠‡∏ô‡∏ó‡∏µ‡πà 3: ‡∏ï‡∏¥‡∏î‡∏ï‡∏±‡πâ‡∏á Robot Framework
      - name: ‡∏ï‡∏¥‡∏î‡∏ï‡∏±‡πâ‡∏á Robot Framework
        run: |
          pip install -r requirements.txt

      # ‡∏Ç‡∏±‡πâ‡∏ô‡∏ï‡∏≠‡∏ô‡∏ó‡∏µ‡πà 4: ‡∏£‡∏±‡∏ô‡πÄ‡∏ó‡∏™
      - name: üß™ Run Web Tests Only
        run: |
          mkdir -p results
          
          # ‡∏£‡∏±‡∏ô‡πÄ‡∏â‡∏û‡∏≤‡∏∞ Web Tests - ‡∏°‡∏µ 3 ‡∏ß‡∏¥‡∏ò‡∏µ‡πÉ‡∏´‡πâ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å:
          
          # ‡∏ß‡∏¥‡∏ò‡∏µ‡∏ó‡∏µ‡πà 1: ‡∏£‡∏±‡∏ô‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡πÇ‡∏ü‡∏•‡πÄ‡∏î‡∏≠‡∏£‡πå Web
          robot \
            --variable BROWSER:headlesschrome \
            --outputdir results \
            --output output.xml \
            --log log.html \
            --report report.html \
            --name "Web Tests" \
            TestScript/Web/Staging/FlowLogin.robot || true
          
          # ‡∏´‡∏£‡∏∑‡∏≠ ‡∏ß‡∏¥‡∏ò‡∏µ‡∏ó‡∏µ‡πà 2: ‡∏£‡∏±‡∏ô‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡πÑ‡∏ü‡∏•‡πå‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£
          # robot \
          #   --variable BROWSER:headlesschrome \
          #   --outputdir results \
          #   TestScript/Web/Staging/FlowLogin.robot || true
          
          # ‡∏´‡∏£‡∏∑‡∏≠ ‡∏ß‡∏¥‡∏ò‡∏µ‡∏ó‡∏µ‡πà 3: ‡πÉ‡∏ä‡πâ tags (‡∏ñ‡πâ‡∏≤‡∏°‡∏µ tag ‡πÉ‡∏ô‡πÑ‡∏ü‡∏•‡πå robot)
          # robot \
          #   --variable BROWSER:headlesschrome \
          #   --outputdir results \
          #   --include web \
          #   --exclude api \
          #   --exclude mobile \
          #   TestScript/ || true
      
      - name: üìä Analyze Web Test Results
        if: always()
        run: |
          if [ -f "results/output.xml" ]; then
            python << 'EOF'
          import xml.etree.ElementTree as ET
          
          tree = ET.parse('results/output.xml')
          root = tree.getroot()
          stats = root.find('.//statistics/total/stat')
          
          if stats:
              passed = int(stats.get('pass', 0))
              failed = int(stats.get('fail', 0))
              total = passed + failed
              pass_rate = (passed / total * 100) if total > 0 else 0
              
              print("\n" + "="*50)
              print("üåê WEB TEST RESULTS")
              print("="*50)
              print(f"‚úÖ Passed:  {passed:3d} tests")
              print(f"‚ùå Failed:  {failed:3d} tests")
              print(f"üìä Total:   {total:3d} tests")
              print(f"üìà Pass Rate: {pass_rate:.1f}%")
              print("="*50)
              
              # ‡∏™‡∏£‡πâ‡∏≤‡∏á GitHub Summary
              with open('summary.md', 'w') as f:
                  f.write("# üåê Web Test Results\n\n")
                  f.write("| Type | Count |\n")
                  f.write("|------|-------|\n")
                  f.write(f"| ‚úÖ Passed | **{passed}** |\n")
                  f.write(f"| ‚ùå Failed | **{failed}** |\n")
                  f.write(f"| üìä Total | **{total}** |\n")
                  f.write(f"| üìà Pass Rate | **{pass_rate:.1f}%** |\n")
          EOF
            
            # ‡πÅ‡∏™‡∏î‡∏á‡πÉ‡∏ô GitHub Summary
            if [ -f "summary.md" ]; then
              cat summary.md >> $GITHUB_STEP_SUMMARY
            fi
          else
            echo "‚ö†Ô∏è No test results found"
          fi
      
      - name: üìÅ Upload Web Test Results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: web-test-results-${{ github.run_number }}
          path: results/
          retention-days: 30