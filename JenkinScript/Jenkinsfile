pipeline {
    agent any
    
    // ‡∏ï‡∏±‡∏ß‡πÅ‡∏õ‡∏£ Environment ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏£‡∏±‡∏ô Pipeline
    environment {
        ROBOT_OPTIONS = '--outputdir results --loglevel INFO --timestampoutputs'  // ‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö Robot Framework
        APPIUM_SERVER = 'http://localhost:4723/wd/hub'                            // URL ‡∏Ç‡∏≠‡∏á Appium Server
        PYTHON_PATH = 'python'                                                    // Path ‡∏Ç‡∏≠‡∏á Python
    }
    
    // ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏Å‡∏≤‡∏£ Build ‡πÅ‡∏•‡∏∞ Options ‡∏ï‡πà‡∏≤‡∏á‡πÜ
    options {
        timeout(time: 30, unit: 'MINUTES')        // ‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡πÄ‡∏ß‡∏•‡∏≤ timeout 30 ‡∏ô‡∏≤‡∏ó‡∏µ
        skipDefaultCheckout(false)                // ‡πÑ‡∏°‡πà‡∏Ç‡πâ‡∏≤‡∏° checkout code
        buildDiscarder(logRotator(numToKeepStr: '10'))  // ‡πÄ‡∏Å‡πá‡∏ö build history 10 ‡∏£‡∏≠‡∏ö‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î
    }
    
    stages {
        // ‡∏Ç‡∏±‡πâ‡∏ô‡∏ï‡∏≠‡∏ô‡∏ó‡∏µ‡πà 1: ‡∏î‡∏∂‡∏á‡πÇ‡∏Ñ‡πâ‡∏î‡∏à‡∏≤‡∏Å Git Repository
        stage('Checkout Code From Git') {
            steps {
                echo 'üîÑ ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏î‡∏∂‡∏á‡πÇ‡∏Ñ‡πâ‡∏î‡∏à‡∏≤‡∏Å Git repository...'
                
                // ‡∏î‡∏∂‡∏á‡πÇ‡∏Ñ‡πâ‡∏î‡∏à‡∏≤‡∏Å GitHub
                git branch: 'main',
                    url: 'https://github.com/kaakom100/TTB-Automation-Assignment'
                    
                // ‡πÅ‡∏™‡∏î‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• commit ‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î
                script {
                    def commitInfo = bat(script: 'git log -1 --pretty=format:"%h - %an: %s"', returnStdout: true).trim()
                    echo "üìù Commit ‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î: ${commitInfo}"
                }
            }
        }
        
        // ‡∏Ç‡∏±‡πâ‡∏ô‡∏ï‡∏≠‡∏ô‡∏ó‡∏µ‡πà 2: ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤ Environment ‡πÅ‡∏•‡∏∞‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏£‡∏∞‡∏ö‡∏ö
        stage('Environment Setup') {
            steps {
                echo '‚öôÔ∏è ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤ Python environment...'
                script {
                    try {
                        // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡πÄ‡∏ß‡∏≠‡∏£‡πå‡∏ä‡∏±‡∏ô Python
                        bat 'python --version'
                        echo '‚úÖ Python ‡∏û‡∏£‡πâ‡∏≠‡∏°‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô'
                        
                        // ‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÇ‡∏ü‡∏•‡πÄ‡∏î‡∏≠‡∏£‡πå results ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÄ‡∏Å‡πá‡∏ö‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå
                        bat 'if not exist "results" mkdir results'
                        echo 'üìÅ ‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÇ‡∏ü‡∏•‡πÄ‡∏î‡∏≠‡∏£‡πå results ‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢'
                        
                        // ‡∏≠‡∏±‡∏û‡πÄ‡∏Å‡∏£‡∏î pip ‡πÄ‡∏õ‡πá‡∏ô‡πÄ‡∏ß‡∏≠‡∏£‡πå‡∏ä‡∏±‡∏ô‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î
                        bat 'python -m pip install --upgrade pip'
                        echo '‚¨ÜÔ∏è ‡∏≠‡∏±‡∏û‡πÄ‡∏Å‡∏£‡∏î pip ‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢'
                        
                    } catch (Exception e) {
                        error "‚ùå ‡∏Å‡∏≤‡∏£‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤ environment ‡∏•‡πâ‡∏°‡πÄ‡∏´‡∏•‡∏ß: ${e.getMessage()}"
                    }
                }
            }
        }
        
        // ‡∏Ç‡∏±‡πâ‡∏ô‡∏ï‡∏≠‡∏ô‡∏ó‡∏µ‡πà 3: ‡∏ï‡∏¥‡∏î‡∏ï‡∏±‡πâ‡∏á Dependencies ‡πÅ‡∏•‡∏∞ Libraries
        stage('Install Dependencies') {
            steps {
                echo 'üì¶ ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏ï‡∏¥‡∏î‡∏ï‡∏±‡πâ‡∏á Python dependencies...'
                script {
                    try {
                        // ‡∏ï‡∏¥‡∏î‡∏ï‡∏±‡πâ‡∏á libraries ‡∏à‡∏≤‡∏Å requirements.txt
                        bat 'pip install -r JenkinScript/requirements.txt'
                        echo '‚úÖ ‡∏ï‡∏¥‡∏î‡∏ï‡∏±‡πâ‡∏á dependencies ‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢'
                        
                        // ‡πÅ‡∏™‡∏î‡∏á‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£ Robot Framework packages ‡∏ó‡∏µ‡πà‡∏ï‡∏¥‡∏î‡∏ï‡∏±‡πâ‡∏á
                        echo 'üìã ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£ Robot Framework packages:'
                        bat 'pip list | findstr robot'
                        
                    } catch (Exception e) {
                        error "‚ùå ‡∏Å‡∏≤‡∏£‡∏ï‡∏¥‡∏î‡∏ï‡∏±‡πâ‡∏á dependencies ‡∏•‡πâ‡∏°‡πÄ‡∏´‡∏•‡∏ß: ${e.getMessage()}"
                    }
                }
            }
        }
        
        // ‡∏Ç‡∏±‡πâ‡∏ô‡∏ï‡∏≠‡∏ô‡∏ó‡∏µ‡πà 4: ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡πÑ‡∏ü‡∏•‡πå‡πÅ‡∏•‡∏∞‡πÇ‡∏Ñ‡∏£‡∏á‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Å‡πà‡∏≠‡∏ô‡∏£‡∏±‡∏ô Test
        stage('Pre-Test Validation') {
            steps {
                echo 'üîç ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö test environment...'
                script {
                    try {
                        // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡πÑ‡∏ü‡∏•‡πå configuration ‡∏ó‡∏µ‡πà‡∏à‡∏≥‡πÄ‡∏õ‡πá‡∏ô
                        bat 'if not exist "Configuration\\Configs_Run_Test_Global.yml" (echo ‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö‡πÑ‡∏ü‡∏•‡πå Configuration & exit 1)'
                        bat 'if not exist "Resource\\KeyRepositories.yml" (echo ‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö‡πÑ‡∏ü‡∏•‡πå Key repositories & exit 1)'
                        echo '‚úÖ ‡πÑ‡∏ü‡∏•‡πå configuration ‡∏Ñ‡∏£‡∏ö‡∏ñ‡πâ‡∏ß‡∏ô'
                        
                        // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡πÇ‡∏ü‡∏•‡πÄ‡∏î‡∏≠‡∏£‡πå test scripts
                        bat 'if not exist "TestScript" (echo ‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö‡πÇ‡∏ü‡∏•‡πÄ‡∏î‡∏≠‡∏£‡πå TestScript & exit 1)'
                        echo '‚úÖ ‡πÇ‡∏ü‡∏•‡πÄ‡∏î‡∏≠‡∏£‡πå TestScript ‡∏û‡∏£‡πâ‡∏≠‡∏°‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô'
                        
                        echo 'üéØ ‡∏Å‡∏≤‡∏£‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö environment ‡πÄ‡∏™‡∏£‡πá‡∏à‡∏™‡∏°‡∏ö‡∏π‡∏£‡∏ì‡πå'
                        
                    } catch (Exception e) {
                        error "‚ùå ‡∏Å‡∏≤‡∏£‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Å‡πà‡∏≠‡∏ô‡∏£‡∏±‡∏ô test ‡∏•‡πâ‡∏°‡πÄ‡∏´‡∏•‡∏ß: ${e.getMessage()}"
                    }
                }
            }
        }
        
        // ‡∏Ç‡∏±‡πâ‡∏ô‡∏ï‡∏≠‡∏ô‡∏ó‡∏µ‡πà 5: ‡∏£‡∏±‡∏ô API Tests
        stage('Run API Tests') {
            steps {
                echo 'üåê ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏£‡∏±‡∏ô API tests...'
                script {
                    try {
                        // ‡∏£‡∏±‡∏ô API tests ‡∏î‡πâ‡∏ß‡∏¢ tag 'api' 
                        def result = bat(
                            script: 'robot --include api --outputdir results/api --name "API_Tests" TestScript/API',
                            returnStatus: true
                        )
                        
                        // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå‡∏Å‡∏≤‡∏£‡∏£‡∏±‡∏ô
                        if (result > 250) {
                            error "üí• API test ‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡∏£‡πâ‡∏≤‡∏¢‡πÅ‡∏£‡∏á"
                        } else if (result != 0) {
                            echo "‚ö†Ô∏è API test ‡∏ö‡∏≤‡∏á‡∏™‡πà‡∏ß‡∏ô‡∏•‡πâ‡∏°‡πÄ‡∏´‡∏•‡∏ß ‡πÅ‡∏ï‡πà pipeline ‡∏à‡∏∞‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£‡∏ï‡πà‡∏≠"
                            currentBuild.result = 'UNSTABLE'
                        } else {
                            echo "‚úÖ API tests ‡∏ú‡πà‡∏≤‡∏ô‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î"
                        }
                        
                    } catch (Exception e) {
                        echo "‚ö†Ô∏è API tests ‡∏°‡∏µ‡∏õ‡∏±‡∏ç‡∏´‡∏≤: ${e.getMessage()}"
                        currentBuild.result = 'UNSTABLE'
                    }
                }
            }
        }
        
        // ‡∏Ç‡∏±‡πâ‡∏ô‡∏ï‡∏≠‡∏ô‡∏ó‡∏µ‡πà 6: ‡∏£‡∏±‡∏ô Web Automation Tests
        stage('Run Web Tests') {
            steps {
                echo 'üñ•Ô∏è ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏£‡∏±‡∏ô Web automation tests...'
                script {
                    try {
                        // ‡∏£‡∏±‡∏ô Web tests ‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡πÉ‡∏ô‡πÇ‡∏ü‡∏•‡πÄ‡∏î‡∏≠‡∏£‡πå Web
                        def result = bat(
                            script: 'robot --outputdir results/web --name "Web_Tests" TestScript/Web',
                            returnStatus: true
                        )
                        
                        // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå‡∏Å‡∏≤‡∏£‡∏£‡∏±‡∏ô
                        if (result > 250) {
                            error "üí• Web test ‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡∏£‡πâ‡∏≤‡∏¢‡πÅ‡∏£‡∏á"
                        } else if (result != 0) {
                            echo "‚ö†Ô∏è Web test ‡∏ö‡∏≤‡∏á‡∏™‡πà‡∏ß‡∏ô‡∏•‡πâ‡∏°‡πÄ‡∏´‡∏•‡∏ß ‡πÅ‡∏ï‡πà pipeline ‡∏à‡∏∞‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£‡∏ï‡πà‡∏≠"
                            currentBuild.result = 'UNSTABLE'
                        } else {
                            echo "‚úÖ Web tests ‡∏ú‡πà‡∏≤‡∏ô‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î"
                        }
                        
                    } catch (Exception e) {
                        echo "‚ö†Ô∏è Web tests ‡∏°‡∏µ‡∏õ‡∏±‡∏ç‡∏´‡∏≤: ${e.getMessage()}"
                        currentBuild.result = 'UNSTABLE'
                    }
                }
            }
        }
        
        // ‡∏Ç‡∏±‡πâ‡∏ô‡∏ï‡∏≠‡∏ô‡∏ó‡∏µ‡πà 7: ‡∏£‡∏±‡∏ô Mobile Automation Tests (‡∏£‡∏±‡∏ô‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡πÄ‡∏°‡∏∑‡πà‡∏≠ Appium Server ‡∏û‡∏£‡πâ‡∏≠‡∏°)
        stage('Run Mobile Tests') {
            when {
                // ‡πÄ‡∏á‡∏∑‡πà‡∏≠‡∏ô‡πÑ‡∏Ç: ‡∏£‡∏±‡∏ô Mobile tests ‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡πÄ‡∏°‡∏∑‡πà‡∏≠ Appium server ‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠‡πÑ‡∏î‡πâ
                expression {
                    try {
                        echo 'üì± ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö Appium server...'
                        def response = bat(script: 'curl -s http://localhost:4723/wd/hub/status', returnStatus: true)
                        if (response == 0) {
                            echo '‚úÖ Appium server ‡∏û‡∏£‡πâ‡∏≠‡∏°‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô'
                            return true
                        } else {
                            echo '‚ö†Ô∏è Appium server ‡πÑ‡∏°‡πà‡∏û‡∏£‡πâ‡∏≠‡∏° - ‡∏Ç‡πâ‡∏≤‡∏° Mobile tests'
                            return false
                        }
                    } catch (Exception e) {
                        echo "‚ö†Ô∏è ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠ Appium server - ‡∏Ç‡πâ‡∏≤‡∏° Mobile tests"
                        return false
                    }
                }
            }
            steps {
                echo 'üì± ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏£‡∏±‡∏ô Mobile automation tests...'
                script {
                    try {
                        // ‡∏£‡∏±‡∏ô Mobile tests ‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡πÉ‡∏ô‡πÇ‡∏ü‡∏•‡πÄ‡∏î‡∏≠‡∏£‡πå Mobile
                        def result = bat(
                            script: 'robot --outputdir results/mobile --name "Mobile_Tests" TestScript/Mobile',
                            returnStatus: true
                        )
                        
                        // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå‡∏Å‡∏≤‡∏£‡∏£‡∏±‡∏ô
                        if (result > 250) {
                            error "üí• Mobile test ‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡∏£‡πâ‡∏≤‡∏¢‡πÅ‡∏£‡∏á"
                        } else if (result != 0) {
                            echo "‚ö†Ô∏è Mobile test ‡∏ö‡∏≤‡∏á‡∏™‡πà‡∏ß‡∏ô‡∏•‡πâ‡∏°‡πÄ‡∏´‡∏•‡∏ß ‡πÅ‡∏ï‡πà pipeline ‡∏à‡∏∞‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£‡∏ï‡πà‡∏≠"
                            currentBuild.result = 'UNSTABLE'
                        } else {
                            echo "‚úÖ Mobile tests ‡∏ú‡πà‡∏≤‡∏ô‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î"
                        }
                        
                    } catch (Exception e) {
                        echo "‚ö†Ô∏è Mobile tests ‡∏°‡∏µ‡∏õ‡∏±‡∏ç‡∏´‡∏≤: ${e.getMessage()}"
                        currentBuild.result = 'UNSTABLE'
                    }
                }
            }
        }
        
        // ‡∏Ç‡∏±‡πâ‡∏ô‡∏ï‡∏≠‡∏ô‡∏ó‡∏µ‡πà 8: ‡∏£‡∏ß‡∏°‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå‡∏à‡∏≤‡∏Å‡∏ó‡∏∏‡∏Å Test Suite
        stage('Merge Test Results') {
            steps {
                echo 'üîó ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏£‡∏ß‡∏°‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå‡∏à‡∏≤‡∏Å‡∏ó‡∏∏‡∏Å test suite...'
                script {
                    try {
                        // ‡∏£‡∏ß‡∏° output files ‡∏à‡∏≤‡∏Å‡∏ó‡∏∏‡∏Å test suite ‡πÄ‡∏õ‡πá‡∏ô‡πÑ‡∏ü‡∏•‡πå‡πÄ‡∏î‡∏µ‡∏¢‡∏ß
                        bat '''
                            echo üìä ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏£‡∏ß‡∏°‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå...
                            if exist "results\\api\\output.xml" (
                                echo ‚úÖ ‡∏û‡∏ö‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå API tests
                            )
                            if exist "results\\web\\output.xml" (
                                echo ‚úÖ ‡∏û‡∏ö‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå Web tests  
                            )
                            if exist "results\\mobile\\output.xml" (
                                echo ‚úÖ ‡∏û‡∏ö‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå Mobile tests
                            )
                            
                            REM ‡∏£‡∏ß‡∏°‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î (‡∏ñ‡πâ‡∏≤‡∏°‡∏µ rebot command)
                            REM rebot --merge results/api/output.xml results/web/output.xml results/mobile/output.xml --name "Complete_Test_Suite" --outputdir results/merged
                        '''
                        
                        echo '‚úÖ ‡∏£‡∏ß‡∏°‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢'
                        
                    } catch (Exception e) {
                        echo "‚ö†Ô∏è ‡∏Å‡∏≤‡∏£‡∏£‡∏ß‡∏°‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå‡∏°‡∏µ‡∏õ‡∏±‡∏ç‡∏´‡∏≤: ${e.getMessage()}"
                        // ‡πÑ‡∏°‡πà‡πÉ‡∏´‡πâ pipeline fail ‡πÄ‡∏û‡∏£‡∏≤‡∏∞‡∏õ‡∏±‡∏ç‡∏´‡∏≤‡∏ô‡∏µ‡πâ
                    }
                }
            }
        }
        
        // ‡∏Ç‡∏±‡πâ‡∏ô‡∏ï‡∏≠‡∏ô‡∏ó‡∏µ‡πà 9: ‡πÄ‡∏ú‡∏¢‡πÅ‡∏û‡∏£‡πà‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå‡πÅ‡∏•‡∏∞ Reports
        stage('Publish Test Results') {
            steps {
                echo 'üìä ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÄ‡∏ú‡∏¢‡πÅ‡∏û‡∏£‡πà test results ‡πÅ‡∏•‡∏∞ reports...'
                script {
                    try {
                        // ‡πÄ‡∏Å‡πá‡∏ö‡πÑ‡∏ü‡∏•‡πå artifacts (XML, HTML, ‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û, logs)
                        echo 'üìÅ ‡∏Å‡∏≥‡∏•‡∏±‡∏á archive artifacts...'
                        archiveArtifacts artifacts: '''
                            results/**/*.xml,
                            results/**/*.html,
                            results/**/*.png,
                            results/**/*.jpg,
                            results/**/*.log
                        ''', allowEmptyArchive: true, fingerprint: true
                        
                        // ‡πÄ‡∏ú‡∏¢‡πÅ‡∏û‡∏£‡πà HTML Reports ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏î‡∏π‡πÉ‡∏ô Jenkins UI
                        echo 'üìÑ ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÄ‡∏ú‡∏¢‡πÅ‡∏û‡∏£‡πà HTML reports...'
                        publishHTML([
                            allowMissing: false,
                            alwaysLinkToLastBuild: true,
                            keepAll: true,
                            reportDir: 'results',
                            reportFiles: '**/report.html',
                            reportName: 'Robot Framework Test Report',
                            reportTitles: '‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô‡∏ú‡∏•‡∏Å‡∏≤‡∏£‡∏ó‡∏î‡∏™‡∏≠‡∏ö'
                        ])
                        
                        // ‡πÉ‡∏ä‡πâ Robot Framework plugin (‡∏ñ‡πâ‡∏≤‡∏°‡∏µ‡∏ï‡∏¥‡∏î‡∏ï‡∏±‡πâ‡∏á)
                        try {
                            echo 'ü§ñ ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÉ‡∏ä‡πâ Robot Framework plugin...'
                            robot outputPath: 'results',
                                  reportFileName: 'report.html',
                                  logFileName: 'log.html',
                                  passThreshold: 80.0,           // ‡πÄ‡∏Å‡∏ì‡∏ë‡πå‡∏ú‡πà‡∏≤‡∏ô 80%
                                  unstableThreshold: 70.0,       // ‡πÄ‡∏Å‡∏ì‡∏ë‡πå unstable 70%
                                  criticalFailedThreshold: 90.0, // ‡πÄ‡∏Å‡∏ì‡∏ë‡πå critical fail 90%
                                  otherFiles: '**/*.png,**/*.jpg' // ‡∏£‡∏ß‡∏° screenshots
                        } catch (Exception robotPluginError) {
                            echo "‚ö†Ô∏è Robot Framework plugin ‡πÑ‡∏°‡πà‡∏û‡∏£‡πâ‡∏≠‡∏°‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô: ${robotPluginError.getMessage()}"
                        }
                        
                        echo '‚úÖ ‡πÄ‡∏ú‡∏¢‡πÅ‡∏û‡∏£‡πà‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢'
                        
                    } catch (Exception e) {
                        echo "‚ö†Ô∏è ‡∏Å‡∏≤‡∏£‡πÄ‡∏ú‡∏¢‡πÅ‡∏û‡∏£‡πà‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå‡∏ö‡∏≤‡∏á‡∏™‡πà‡∏ß‡∏ô‡∏•‡πâ‡∏°‡πÄ‡∏´‡∏•‡∏ß: ${e.getMessage()}"
                        // ‡πÑ‡∏°‡πà‡πÉ‡∏´‡πâ pipeline fail
                    }
                }
            }
        }
        
        // ‡∏Ç‡∏±‡πâ‡∏ô‡∏ï‡∏≠‡∏ô‡∏ó‡∏µ‡πà 10: ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏™‡∏£‡∏∏‡∏õ‡∏ú‡∏•‡∏Å‡∏≤‡∏£‡∏ó‡∏î‡∏™‡∏≠‡∏ö
        stage('Test Summary') {
            steps {
                echo 'üìã ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏™‡∏£‡∏∏‡∏õ‡∏ú‡∏•‡∏Å‡∏≤‡∏£‡∏ó‡∏î‡∏™‡∏≠‡∏ö...'
                script {
                    try {
                        // ‡∏™‡∏£‡πâ‡∏≤‡∏á summary report
                        bat '''
                            echo ===================================== > results\\summary.txt
                            echo           ‡∏™‡∏£‡∏∏‡∏õ‡∏ú‡∏•‡∏Å‡∏≤‡∏£‡∏ó‡∏î‡∏™‡∏≠‡∏ö                >> results\\summary.txt  
                            echo ===================================== >> results\\summary.txt
                            echo Build Number: %BUILD_NUMBER% >> results\\summary.txt
                            echo Build URL: %BUILD_URL% >> results\\summary.txt
                            echo ‡πÄ‡∏ß‡∏•‡∏≤‡∏ó‡∏µ‡πà‡∏£‡∏±‡∏ô: %date% %time% >> results\\summary.txt
                            echo Jenkins Node: %NODE_NAME% >> results\\summary.txt
                            echo ===================================== >> results\\summary.txt
                        '''
                        
                        // ‡∏≠‡πà‡∏≤‡∏ô‡πÅ‡∏•‡∏∞‡πÅ‡∏™‡∏î‡∏á summary ‡πÉ‡∏ô console
                        def summary = bat(script: 'type results\\summary.txt', returnStdout: true)
                        echo "üìä ‡∏™‡∏£‡∏∏‡∏õ‡∏ú‡∏•‡∏Å‡∏≤‡∏£‡∏ó‡∏î‡∏™‡∏≠‡∏ö:\n${summary}"
                        
                    } catch (Exception e) {
                        echo "‚ö†Ô∏è ‡∏Å‡∏≤‡∏£‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏™‡∏£‡∏∏‡∏õ‡∏ú‡∏•‡∏•‡πâ‡∏°‡πÄ‡∏´‡∏•‡∏ß: ${e.getMessage()}"
                    }
                }
            }
        }
    }
    
    // ‡∏Å‡∏≤‡∏£‡∏Å‡∏£‡∏∞‡∏ó‡∏≥‡∏´‡∏•‡∏±‡∏á‡∏à‡∏≤‡∏Å‡∏à‡∏ö Pipeline (‡πÑ‡∏°‡πà‡∏ß‡πà‡∏≤‡∏à‡∏∞‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à‡∏´‡∏£‡∏∑‡∏≠‡∏•‡πâ‡∏°‡πÄ‡∏´‡∏•‡∏ß)
    post {
        // ‡∏£‡∏±‡∏ô‡πÄ‡∏™‡∏°‡∏≠‡πÑ‡∏°‡πà‡∏ß‡πà‡∏≤‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå‡∏à‡∏∞‡πÄ‡∏õ‡πá‡∏ô‡∏≠‡∏¢‡πà‡∏≤‡∏á‡πÑ‡∏£
        always {
            echo 'üèÅ Pipeline execution ‡πÄ‡∏™‡∏£‡πá‡∏à‡∏™‡∏¥‡πâ‡∏ô'
            
            // ‡∏ó‡∏≥‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏∞‡∏≠‡∏≤‡∏î screenshots ‡πÅ‡∏•‡∏∞ temp files
            script {
                try {
                    echo 'üßπ ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏ó‡∏≥‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏∞‡∏≠‡∏≤‡∏î‡πÑ‡∏ü‡∏•‡πå‡∏ä‡∏±‡πà‡∏ß‡∏Ñ‡∏£‡∏≤‡∏ß...'
                    bat 'if exist "selenium-screenshot-*.png" del selenium-screenshot-*.png'
                    bat 'if exist "*.log" del *.log'
                    echo '‚úÖ ‡∏ó‡∏≥‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏∞‡∏≠‡∏≤‡∏î‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢'
                } catch (Exception e) {
                    echo "‚ö†Ô∏è ‡∏Å‡∏≤‡∏£‡∏ó‡∏≥‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏∞‡∏≠‡∏≤‡∏î: ${e.getMessage()}"
                }
            }
        }
        
        // ‡πÄ‡∏°‡∏∑‡πà‡∏≠ Pipeline ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à
        success {
            echo 'üéâ Pipeline ‡πÄ‡∏™‡∏£‡πá‡∏à‡∏™‡∏°‡∏ö‡∏π‡∏£‡∏ì‡πå‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢!'
            echo '‚úÖ ‡∏ó‡∏∏‡∏Å tests ‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡πÑ‡∏î‡πâ‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á‡πÅ‡∏•‡∏∞ results ‡∏ñ‡∏π‡∏Å‡πÄ‡∏ú‡∏¢‡πÅ‡∏û‡∏£‡πà‡πÅ‡∏•‡πâ‡∏ß'
            
            // ‡∏™‡πà‡∏á email notification (‡∏ï‡πâ‡∏≠‡∏á‡∏ï‡∏¥‡∏î‡∏ï‡∏±‡πâ‡∏á Email plugin ‡πÅ‡∏•‡∏∞ uncomment)
            /*
            emailext (
                subject: "‚úÖ ‡∏Å‡∏≤‡∏£‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à - Build #${BUILD_NUMBER}",
                body: """
                üéâ ‡∏Å‡∏≤‡∏£‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡πÄ‡∏™‡∏£‡πá‡∏à‡∏™‡∏°‡∏ö‡∏π‡∏£‡∏ì‡πå‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢
                
                üìä ‡∏î‡∏π‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå‡πÑ‡∏î‡πâ‡∏ó‡∏µ‡πà: ${BUILD_URL}
                üìÑ ‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô: ${BUILD_URL}Robot_Framework_Test_Report/
                """,
                to: "team@company.com"
            )
            */
        }
        
        // ‡πÄ‡∏°‡∏∑‡πà‡∏≠ Pipeline ‡∏°‡∏µ‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞ unstable (‡∏ö‡∏≤‡∏á tests ‡∏•‡πâ‡∏°‡πÄ‡∏´‡∏•‡∏ß)
        unstable {
            echo '‚ö†Ô∏è Pipeline ‡πÄ‡∏™‡∏£‡πá‡∏à‡∏™‡∏¥‡πâ‡∏ô‡πÅ‡∏ï‡πà‡∏°‡∏µ test failures'
            echo 'üìä ‡∏ö‡∏≤‡∏á tests ‡∏•‡πâ‡∏°‡πÄ‡∏´‡∏•‡∏ß ‡πÅ‡∏ï‡πà build artifacts ‡∏ñ‡∏π‡∏Å‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢'
            
            /*
            emailext (
                subject: "‚ö†Ô∏è ‡∏Å‡∏≤‡∏£‡∏ó‡∏î‡∏™‡∏≠‡∏ö Unstable - Build #${BUILD_NUMBER}",
                body: """
                ‚ö†Ô∏è ‡∏ö‡∏≤‡∏á tests ‡∏•‡πâ‡∏°‡πÄ‡∏´‡∏•‡∏ß ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå
                
                üìä ‡∏î‡∏π‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå‡πÑ‡∏î‡πâ‡∏ó‡∏µ‡πà: ${BUILD_URL}
                üìÑ ‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô: ${BUILD_URL}Robot_Framework_Test_Report/
                """,
                to: "team@company.com"
            )
            */
        }
        
        // ‡πÄ‡∏°‡∏∑‡πà‡∏≠ Pipeline ‡∏•‡πâ‡∏°‡πÄ‡∏´‡∏•‡∏ß
        failure {
            echo '‚ùå Pipeline ‡∏•‡πâ‡∏°‡πÄ‡∏´‡∏•‡∏ß!'
            echo 'üîç ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö console output ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏î‡∏π‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î'
            
            /*
            emailext (
                subject: "‚ùå ‡∏Å‡∏≤‡∏£‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏•‡πâ‡∏°‡πÄ‡∏´‡∏•‡∏ß - Build #${BUILD_NUMBER}",
                body: """
                ‚ùå Pipeline execution ‡∏•‡πâ‡∏°‡πÄ‡∏´‡∏•‡∏ß
                
                üîç ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö console: ${BUILD_URL}console
                üìû ‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠‡∏ó‡∏µ‡∏° DevOps ‡∏´‡∏≤‡∏Å‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ä‡πà‡∏ß‡∏¢‡πÄ‡∏´‡∏•‡∏∑‡∏≠
                """,
                to: "team@company.com"
            )
            */
        }
        
        // ‡∏ó‡∏≥‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏∞‡∏≠‡∏≤‡∏î workspace (‡∏ñ‡πâ‡∏≤‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£)
        cleanup {
            echo 'üßπ ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏ó‡∏≥‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏∞‡∏≠‡∏≤‡∏î workspace...'
            /*
            cleanWs(
                cleanWhenNotBuilt: false,
                deleteDirs: true,
                disableDeferredWipeout: true,
                notFailBuild: true,
                patterns: [[pattern: 'results/**', type: 'EXCLUDE']]  // ‡πÄ‡∏Å‡πá‡∏ö results ‡πÑ‡∏ß‡πâ
            )
            */
        }
    }
}